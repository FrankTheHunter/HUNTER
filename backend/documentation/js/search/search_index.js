var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.404,1,1.614]],["body/controllers/AppController.html",[0,2.032,1,2.337,2,1.357,3,0.6,4,0.511,5,0.511,6,2.463,7,0.697,8,1.779,9,3.822,10,2.074,11,0.05,12,1.047,13,3.055,14,1.357,15,1.562,16,0.913,17,0.697,18,1.984,19,2.463,20,0.6,21,0.279,22,2.463,23,3.055,24,1.192,25,3.055,26,0.037,27,0.037]],["title/modules/AppModule.html",[28,0.831,29,1.614]],["body/modules/AppModule.html",[1,2.18,2,1.409,3,0.429,4,0.365,5,0.365,11,0.049,16,1.07,17,0.497,18,2.02,19,1.758,20,0.429,21,0.199,26,0.029,27,0.029,28,1.123,29,2.806,30,0.851,31,0.969,32,1.272,33,1.272,34,0.969,35,1.896,36,1.107,37,1.758,38,1.758,39,1.758,40,2.308,41,1.85,42,1.272,43,1.272,44,2.18,45,2.556,46,2.18,47,2.556,48,2.18,49,1.758,50,1.758,51,1.409,52,2.18,53,2.18,54,2.18,55,0.655,56,2.18,57,1.48,58,2.18,59,2.18,60,2.18,61,1.758,62,2.18,63,1.272,64,2.18,65,1.48,66,2.18,67,2.18,68,2.18,69,1.758,70,2.18,71,1.609,72,2.18]],["title/injectables/AppService.html",[18,1.229,73,0.948]],["body/injectables/AppService.html",[3,0.643,4,0.548,5,0.548,7,0.747,8,1.86,9,3.923,11,0.049,12,1.122,14,1.455,15,1.633,16,0.747,17,0.747,18,1.86,20,0.643,21,0.299,24,1.277,26,0.038,27,0.038,73,1.435,74,1.911,75,2.64,76,3.273,77,3.273,78,3.273]],["title/controllers/AuthController.html",[0,1.404,79,1.614]],["body/controllers/AuthController.html",[0,1.056,2,0.925,3,0.409,4,0.348,5,0.348,7,0.475,8,1.361,10,1.413,11,0.05,12,0.713,14,0.925,16,0.975,17,0.475,20,0.409,21,0.19,22,1.678,24,0.812,26,0.028,27,0.028,55,0.625,69,1.678,71,1.846,79,1.788,80,1.678,81,2.081,82,2.081,83,1.846,84,2.932,85,2.081,86,2.341,87,4.623,88,2.081,89,2.081,90,1.215,91,1.215,92,1.215,93,3.064,94,1.678,95,3.064,96,2.081,97,1.678,98,2.081,99,3.064,100,1.413,101,1.616,102,1.678,103,2.08,104,1.678,105,2.081,106,2.081,107,2.081,108,2.081,109,2.081,110,1.056,111,2.08,112,1.413,113,2.081,114,2.081,115,2.081,116,2.081,117,2.081,118,2.081,119,2.081,120,2.081,121,2.081,122,2.081,123,2.081,124,2.081,125,2.081,126,2.081]],["title/guards/AuthGuard.html",[127,1.877,128,1.614]],["body/guards/AuthGuard.html",[3,0.308,4,0.262,5,0.262,7,0.358,8,1.097,11,0.051,12,1.047,14,1.097,15,0.963,16,0.913,17,0.358,20,0.308,21,0.143,24,1.192,26,0.023,27,0.023,55,1.133,71,1.253,73,0.846,83,1.55,90,1.783,91,1.783,92,1.783,97,1.264,100,1.064,104,1.264,110,1.913,111,2.352,112,1.064,128,1.441,129,1.568,130,1.264,131,3.465,132,3.039,133,2.469,134,1.991,135,1.568,136,3.228,137,4.189,138,1.568,139,2.469,140,3.465,141,1.568,142,1.568,143,1.991,144,2.469,145,4.003,146,1.568,147,3.054,148,1.568,149,2.463,150,1.264,151,0.915,152,1.064,153,0.915,154,1.264,155,1.568,156,1.991,157,1.568,158,1.568,159,1.568,160,1.568,161,1.568,162,2.463,163,1.55,164,1.568,165,1.568,166,1.568,167,1.568,168,1.991,169,1.568,170,1.064,171,1.264,172,1.568,173,1.568,174,1.568,175,1.568]],["title/modules/AuthModule.html",[28,0.831,40,1.404]],["body/modules/AuthModule.html",[2,1.391,3,0.421,4,0.359,5,0.359,11,0.051,16,1.113,17,0.489,20,0.421,21,0.196,26,0.029,27,0.029,28,1.112,30,0.836,31,0.952,32,1.251,33,1.251,34,0.952,35,1.878,36,1.088,40,2.294,41,1.827,42,1.251,43,1.251,45,1.728,47,2.524,49,1.728,50,1.728,51,0.952,71,1.088,79,2.159,101,2.008,102,1.728,128,1.251,151,1.251,153,1.251,154,1.728,170,1.455,171,1.728,176,1.728,177,1.728,178,2.143,179,2.143,180,2.143,181,2.143,182,2.524,183,2.143,184,2.143,185,2.143,186,1.728,187,2.143,188,2.143,189,2.143,190,2.143,191,1.251,192,2.143,193,2.143]],["title/injectables/AuthService.html",[73,0.948,101,1.229]],["body/injectables/AuthService.html",[3,0.365,4,0.311,5,0.311,7,0.424,8,1.251,11,0.05,12,1.165,14,1.251,15,1.673,16,0.865,17,0.424,20,0.365,21,0.17,24,1.098,26,0.026,27,0.026,51,1.51,55,1.021,61,1.498,73,0.965,74,1.084,83,2.177,84,2.27,90,1.984,91,1.984,92,1.984,94,1.498,101,1.251,110,1.925,111,1.911,112,2.307,132,2.27,134,2.27,136,3.592,143,2.27,149,2.27,151,1.084,162,1.498,163,0.943,168,2.27,182,2.27,194,1.498,195,2.815,196,1.858,197,1.685,198,1.858,199,2.815,200,1.925,201,1.858,202,2.815,203,4.074,204,1.858,205,1.858,206,1.858,207,1.858,208,1.858,209,1.858,210,1.858,211,1.858,212,1.261,213,1.858,214,1.858,215,1.858]],["title/classes/CreateUserDto.html",[21,0.253,200,1.404]],["body/classes/CreateUserDto.html",[3,0.688,4,0.586,5,0.586,7,0.799,11,0.048,12,1.2,15,1.704,20,0.688,21,0.32,26,0.04,27,0.04,55,1.052,200,2.218,212,3.233,216,2.377,217,2.824,218,2.55,219,3.501,220,2.824]],["title/modules/DatabaseModule.html",[28,0.831,221,1.877]],["body/modules/DatabaseModule.html",[3,0.516,4,0.439,5,0.439,11,0.05,16,0.943,17,0.599,20,0.516,21,0.24,24,1.024,26,0.033,27,0.033,28,1.086,30,1.024,35,1.332,36,1.332,51,1.166,57,1.781,63,1.532,65,1.781,83,1.332,110,1.835,163,2.099,186,2.915,191,1.532,221,2.454,222,1.781,223,2.807,224,2.915,225,3.334,226,2.116,227,2.807,228,2.116,229,2.116,230,2.915,231,2.116,232,2.116,233,2.116,234,2.116,235,2.116]],["title/classes/LoginDto.html",[21,0.253,86,1.614]],["body/classes/LoginDto.html",[3,0.553,4,0.471,5,0.471,7,0.642,10,2.574,11,0.049,12,1.299,15,1.79,16,0.642,20,0.553,21,0.346,26,0.035,27,0.035,55,1.14,63,2.503,86,2.213,191,2.213,212,3.251,216,1.911,218,2.213,236,2.27,237,2.815,238,3.792,239,3.058,240,3.792,241,2.815,242,4.587,243,2.815,244,2.815,245,2.27,246,2.815]],["title/modules/UsersModule.html",[28,0.831,247,1.614]],["body/modules/UsersModule.html",[2,1.333,3,0.59,4,0.502,5,0.502,11,0.048,16,0.903,17,0.684,20,0.59,21,0.274,26,0.036,27,0.036,28,1.33,30,1.17,31,1.333,32,1.751,33,1.751,34,1.333,35,2.247,36,1.523,41,2.309,42,1.751,43,1.751,197,2.232,247,2.932,248,2.419,249,2.419,250,3,251,3]],["title/injectables/UsersService.html",[73,0.948,197,1.229]],["body/injectables/UsersService.html",[3,0.579,4,0.493,5,0.493,7,0.672,8,1.737,11,0.049,12,1.01,14,1.31,16,0.892,17,0.672,20,0.579,21,0.269,26,0.036,27,0.036,51,1.95,55,0.886,73,1.34,74,1.72,90,1.72,91,1.72,92,1.72,197,1.737,200,2.372,220,2.377,252,2.377,253,4.387,254,3.91,255,2.947,256,2.947,257,2.947,258,2.947,259,2.947]],["title/coverage.html",[260,2.543]],["body/coverage.html",[0,1.747,1,1.427,5,0.409,6,1.972,11,0.049,18,1.087,21,0.314,26,0.031,27,0.031,34,1.087,55,0.735,73,1.365,75,1.972,79,1.427,80,1.972,86,1.427,101,1.087,103,1.66,127,1.66,128,1.427,130,1.972,152,1.66,153,1.427,163,1.241,194,1.972,197,1.087,200,1.241,217,1.972,222,1.66,227,1.66,236,1.972,252,1.972,260,1.66,261,2.445,262,2.445,263,2.445,264,5.251,265,4.554,266,3.441,267,1.972,268,4.321,269,4.554,270,2.775,271,2.445,272,1.972,273,2.445,274,2.445,275,2.445]],["title/dependencies.html",[31,1.474,276,1.873]],["body/dependencies.html",[11,0.05,17,0.767,21,0.307,26,0.039,27,0.039,31,1.494,100,2.282,150,2.71,151,1.962,223,2.282,226,2.71,245,2.71,277,4.673,278,3.361,279,3.361,280,3.361,281,3.361,282,3.361,283,3.361,284,3.361,285,3.361,286,3.361,287,3.361]],["title/miscellaneous/functions.html",[288,1.356,289,2.675]],["body/miscellaneous/functions.html",[7,0.906,11,0.043,26,0.043,27,0.043,34,2.236,272,3.203,288,2.318,289,3.203,290,3.972]],["title/index.html",[7,0.53,291,2.322,292,2.322]],["body/index.html",[4,0.394,11,0.048,26,0.031,27,0.031,239,1.898,260,1.598,293,2.354,294,2.354,295,3.349,296,2.354,297,2.354,298,2.354,299,2.354,300,2.354,301,2.354,302,1.898,303,3.899,304,2.354,305,2.354,306,2.354,307,2.354,308,3.899,309,4.8,310,2.354,311,2.354,312,2.354,313,4.665,314,2.354,315,2.354,316,3.349,317,2.354,318,2.354,319,2.354,320,2.354,321,3.349,322,3.349,323,2.354,324,2.354,325,2.354,326,3.349,327,3.349,328,2.354,329,2.354,330,2.354,331,2.354,332,2.354,333,1.898,334,2.354,335,2.354,336,2.354,337,2.354,338,2.354,339,2.354,340,2.354,341,2.354,342,2.354,343,1.898,344,2.354,345,2.354,346,2.354,347,2.354,348,2.354,349,2.354,350,1.898]],["title/modules.html",[30,1.461]],["body/modules.html",[11,0.041,26,0.041,27,0.041,29,2.118,30,1.415,40,1.842,221,2.463,247,2.118,333,3.901,351,4.838,352,4.838,353,5.048,354,3.628,355,3.628]],["title/overview.html",[356,3.021]],["body/overview.html",[2,1.272,11,0.045,18,1.922,26,0.035,27,0.035,28,0.861,29,2.893,30,1.117,31,1.272,32,1.671,33,1.671,34,1.272,35,1.454,36,1.454,37,2.309,38,2.309,39,2.309,40,2.445,41,2.239,42,1.671,43,1.671,74,1.671,101,1.922,127,1.944,176,2.309,177,2.309,197,1.922,216,1.944,247,2.696,248,2.309,249,2.309,356,2.309,357,2.863,358,3.835,359,2.863,360,2.863]],["title/properties.html",[218,1.937,276,1.873]],["body/properties.html",[11,0.049,26,0.042,27,0.042,218,2.265,302,3.129,343,3.129,350,3.129,361,3.88,362,3.88,363,3.88]],["title/miscellaneous/variables.html",[288,1.356,364,2.675]],["body/miscellaneous/variables.html",[7,0.566,11,0.05,15,0.968,24,0.968,26,0.032,27,0.032,51,1.103,55,1.206,57,1.685,63,1.448,65,1.685,71,1.26,83,1.26,103,2.361,110,1.26,152,2.361,153,2.029,156,2.001,163,2.038,170,1.685,191,1.448,222,1.685,223,1.685,224,2.001,225,2.804,227,2.361,228,2.001,229,2.001,230,2.804,231,2.001,232,2.001,233,2.001,234,2.001,235,2.001,267,2.001,270,2.001,288,1.448,364,2.001,365,2.481,366,3.477,367,2.481,368,4.349,369,4.349,370,2.481,371,2.481,372,2.481]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/LoginDto.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":264,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":362,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":280,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":285,"title":{},"body":{"dependencies.html":{}}}],["0.27.3",{"_index":281,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":269,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":265,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":271,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":266,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":360,"title":{},"body":{"overview.html":{}}}],["10.0.0",{"_index":277,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":278,"title":{},"body":{"dependencies.html":{}}}],["1000",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{}}}],["127.0.0.1:5432",{"_index":232,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["15",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{}}}],["1d",{"_index":189,"title":{},"body":{"modules/AuthModule.html":{}}}],["2",{"_index":358,"title":{},"body":{"overview.html":{}}}],["3",{"_index":359,"title":{},"body":{"overview.html":{}}}],["4",{"_index":357,"title":{},"body":{"overview.html":{}}}],["5433",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["60",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{}}}],["7.8.1",{"_index":287,"title":{},"body":{"dependencies.html":{}}}],["8.11.5",{"_index":282,"title":{},"body":{"dependencies.html":{}}}],["amazing",{"_index":334,"title":{},"body":{"index.html":{}}}],["app",{"_index":311,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_guard",{"_index":192,"title":{},"body":{"modules/AuthModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":301,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["auth",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":179,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":79,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":128,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authmodule",{"_index":40,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":343,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":101,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["autoloadentities",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["available",{"_index":355,"title":{},"body":{"modules.html":{}}}],["await",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["backers",{"_index":335,"title":{},"body":{"index.html":{}}}],["bearer",{"_index":175,"title":{},"body":{"guards/AuthGuard.html":{}}}],["body",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{}}}],["bootstrap",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":353,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":351,"title":{},"body":{"modules.html":{}}}],["building",{"_index":296,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":131,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canactivate(context",{"_index":139,"title":{},"body":{"guards/AuthGuard.html":{}}}],["catch",{"_index":173,"title":{},"body":{"guards/AuthGuard.html":{}}}],["class",{"_index":21,"title":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/LoginDto.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":216,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":176,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":177,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":248,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":249,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["console.log('todo",{"_index":258,"title":{},"body":{"injectables/UsersService.html":{}}}],["console.log(token",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{}}}],["console.log(user",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{}}}],["const",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["constants",{"_index":154,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{}}}],["constructor",{"_index":134,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["constructor(jwtservice",{"_index":135,"title":{},"body":{"guards/AuthGuard.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{}}}],["constructor(userservice",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{}}}],["context",{"_index":142,"title":{},"body":{"guards/AuthGuard.html":{}}}],["context.getclass",{"_index":159,"title":{},"body":{"guards/AuthGuard.html":{}}}],["context.gethandler",{"_index":158,"title":{},"body":{"guards/AuthGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":160,"title":{},"body":{"guards/AuthGuard.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["coverage",{"_index":260,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":253,"title":{},"body":{"injectables/UsersService.html":{}}}],["create(user",{"_index":254,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto",{"_index":200,"title":{"classes/CreateUserDto.html":{}},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["database",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["database_connection",{"_index":228,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["database_providers",{"_index":227,"title":{},"body":{"modules/DatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["databasemodule",{"_index":221,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/DatabaseModule.html":{},"modules.html":{}}}],["db",{"_index":230,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["declarations",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/LoginDto.html":{}}}],["default",{"_index":368,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"injectables/UsersService.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":302,"title":{},"body":{"index.html":{},"properties.html":{}}}],["development",{"_index":312,"title":{},"body":{"index.html":{}}}],["dialect",{"_index":231,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["documentation",{"_index":261,"title":{},"body":{"coverage.html":{}}}],["dto/createuser.dto",{"_index":257,"title":{},"body":{"injectables/UsersService.html":{}}}],["dto/login.dto",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{}}}],["e2e",{"_index":323,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":297,"title":{},"body":{"index.html":{}}}],["email",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["entities",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["example",{"_index":308,"title":{},"body":{"index.html":{}}}],["executioncontext",{"_index":140,"title":{},"body":{"guards/AuthGuard.html":{}}}],["expiresin",{"_index":188,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/LoginDto.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"dependencies.html":{}}}],["extracttokenfromheader",{"_index":133,"title":{},"body":{"guards/AuthGuard.html":{}}}],["extracttokenfromheader(request",{"_index":144,"title":{},"body":{"guards/AuthGuard.html":{}}}],["false",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/LoginDto.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["framework",{"_index":295,"title":{},"body":{"index.html":{}}}],["function",{"_index":273,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":289,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":291,"title":{"index.html":{}},"body":{}}],["global",{"_index":186,"title":{},"body":{"modules/AuthModule.html":{},"modules/DatabaseModule.html":{}}}],["graph",{"_index":354,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":330,"title":{},"body":{"index.html":{}}}],["guard",{"_index":127,"title":{"guards/AuthGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":129,"title":{},"body":{"guards/AuthGuard.html":{}}}],["hello",{"_index":77,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":340,"title":{},"body":{"index.html":{}}}],["host",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["httpcode",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpexception",{"_index":148,"title":{},"body":{"guards/AuthGuard.html":{}}}],["httpexception('unauthorized",{"_index":164,"title":{},"body":{"guards/AuthGuard.html":{}}}],["httponly",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{}}}],["https://nestjs.com",{"_index":347,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{}}}],["httpstatus.unauthorized",{"_index":165,"title":{},"body":{"guards/AuthGuard.html":{}}}],["hunter",{"_index":234,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["hunters",{"_index":233,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":262,"title":{},"body":{"coverage.html":{}}}],["if(user?.password",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{}}}],["implements",{"_index":155,"title":{},"body":{"guards/AuthGuard.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"classes/LoginDto.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/LoginDto.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["injectable",{"_index":73,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":74,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["installation",{"_index":307,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":310,"title":{},"body":{"index.html":{}}}],["is_public_key",{"_index":152,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isemail",{"_index":244,"title":{},"body":{"classes/LoginDto.html":{}}}],["isemail(null",{"_index":246,"title":{},"body":{"classes/LoginDto.html":{}}}],["isnotempty",{"_index":242,"title":{},"body":{"classes/LoginDto.html":{}}}],["isnotempty()@isemail(undefined",{"_index":237,"title":{},"body":{"classes/LoginDto.html":{}}}],["ispublic",{"_index":156,"title":{},"body":{"guards/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["join",{"_index":337,"title":{},"body":{"index.html":{}}}],["jwtconstants",{"_index":153,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtconstants.secret",{"_index":171,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{}}}],["jwtmodule",{"_index":180,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":185,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtsecret",{"_index":372,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwtservice",{"_index":136,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["kamil",{"_index":344,"title":{},"body":{"index.html":{}}}],["kysely",{"_index":223,"title":{},"body":{"modules/DatabaseModule.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["legend",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["license",{"_index":350,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":327,"title":{},"body":{"index.html":{}}}],["localhost",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["logging",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["logindto",{"_index":86,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/LoginDto.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["maxage",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{}}}],["message",{"_index":238,"title":{},"body":{"classes/LoginDto.html":{}}}],["metadata",{"_index":284,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["miscellaneous",{"_index":288,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":326,"title":{},"body":{"index.html":{}}}],["mode",{"_index":316,"title":{},"body":{"index.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":339,"title":{},"body":{"index.html":{}}}],["my_database",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["mypassword",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["myuser",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["myśliwiec",{"_index":345,"title":{},"body":{"index.html":{}}}],["name",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["nest",{"_index":303,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":349,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":150,"title":{},"body":{"guards/AuthGuard.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":151,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":279,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["new",{"_index":163,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["node.js",{"_index":294,"title":{},"body":{"index.html":{}}}],["none",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{}}}],["npm",{"_index":309,"title":{},"body":{"index.html":{}}}],["object",{"_index":371,"title":{},"body":{"miscellaneous/variables.html":{}}}],["open",{"_index":328,"title":{},"body":{"index.html":{}}}],["optional",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["out",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":356,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":276,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["parameters",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["pass",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{}}}],["passthrough",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{}}}],["password",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"classes/LoginDto.html":{},"miscellaneous/variables.html":{}}}],["payload",{"_index":168,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["pg",{"_index":226,"title":{},"body":{"modules/DatabaseModule.html":{},"dependencies.html":{}}}],["please",{"_index":239,"title":{},"body":{"classes/LoginDto.html":{},"index.html":{}}}],["pool",{"_index":225,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["port",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["post",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{}}}],["postgres",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["postgresdialect",{"_index":224,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["prefix",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{}}}],["private",{"_index":132,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["production",{"_index":318,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":293,"title":{},"body":{"index.html":{}}}],["project",{"_index":329,"title":{},"body":{"index.html":{}}}],["promise",{"_index":143,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["properties",{"_index":218,"title":{"properties.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"properties.html":{}}}],["provide",{"_index":191,"title":{},"body":{"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"classes/LoginDto.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["public",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["public()@httpcode(httpstatus.ok)@post('login",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{}}}],["public_strategy",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{}}}],["read",{"_index":338,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{}}}],["reflect",{"_index":283,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":137,"title":{},"body":{"guards/AuthGuard.html":{}}}],["register",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{}}}],["register(payload",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{}}}],["repository",{"_index":306,"title":{},"body":{"index.html":{}}}],["request",{"_index":145,"title":{},"body":{"guards/AuthGuard.html":{}}}],["request.headers.authorization?.split",{"_index":174,"title":{},"body":{"guards/AuthGuard.html":{}}}],["request.user",{"_index":161,"title":{},"body":{"guards/AuthGuard.html":{}}}],["request['user",{"_index":172,"title":{},"body":{"guards/AuthGuard.html":{}}}],["res",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{}}}],["reset",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["response",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{}}}],["response.cookie('token",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/LoginDto.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["run",{"_index":313,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":286,"title":{},"body":{"dependencies.html":{}}}],["samesite",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{}}}],["scalable",{"_index":298,"title":{},"body":{"index.html":{}}}],["secret",{"_index":170,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["secure",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{}}}],["server",{"_index":299,"title":{},"body":{"index.html":{}}}],["setmetadata(is_public_key",{"_index":370,"title":{},"body":{"miscellaneous/variables.html":{}}}],["side",{"_index":300,"title":{},"body":{"index.html":{}}}],["signin",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signin(signindto",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin(username",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{}}}],["signindto",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{}}}],["signindto.email",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{}}}],["signindto.password",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{}}}],["signoptions",{"_index":187,"title":{},"body":{"modules/AuthModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/LoginDto.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sponsors",{"_index":332,"title":{},"body":{"index.html":{}}}],["src/.../constants.ts",{"_index":367,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../database.module.ts",{"_index":365,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":290,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../public_strategy.ts",{"_index":366,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":75,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":76,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:21",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.guard.ts",{"_index":130,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/auth/auth.guard.ts:16",{"_index":138,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/auth/auth.guard.ts:22",{"_index":141,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/auth/auth.guard.ts:50",{"_index":146,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/auth/auth.module.ts",{"_index":178,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:14",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:28",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:8",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/constants.ts",{"_index":267,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/public_strategy.ts",{"_index":270,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/database/database.module.ts",{"_index":222,"title":{},"body":{"modules/DatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/dto/login.dto.ts",{"_index":236,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/dto/login.dto.ts:6",{"_index":241,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/dto/login.dto.ts:9",{"_index":243,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/main.ts",{"_index":272,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/user/entities/user.entity",{"_index":181,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/user/user.module",{"_index":184,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/user/user.service",{"_index":183,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/users/dto/createuser.dto",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/users/dto/createuser.dto.ts",{"_index":217,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/createuser.dto.ts:3",{"_index":219,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/users/users.module.ts",{"_index":250,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/users/users.service.ts",{"_index":252,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:6",{"_index":255,"title":{},"body":{"injectables/UsersService.html":{}}}],["start",{"_index":314,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":317,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":319,"title":{},"body":{"index.html":{}}}],["started",{"_index":292,"title":{"index.html":{}},"body":{}}],["starter",{"_index":305,"title":{},"body":{"index.html":{}}}],["statements",{"_index":263,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":341,"title":{},"body":{"index.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"miscellaneous/variables.html":{}}}],["sub",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{}}}],["success",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{}}}],["super",{"_index":235,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["support",{"_index":333,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":352,"title":{},"body":{"modules.html":{}}}],["synchronize",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["table",{"_index":275,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":274,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":322,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":325,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":324,"title":{},"body":{"index.html":{}}}],["tests",{"_index":321,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":331,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.signin",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.extracttokenfromheader(request",{"_index":166,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.jwtservice.signasync(payload",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verifyasync(token",{"_index":169,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.reflector.getallandoverride(is_public_key",{"_index":157,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.userservice.createuser(payload",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.findonebyemail(username",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{}}}],["throw",{"_index":162,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["todo",{"_index":220,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/UsersService.html":{}}}],["token",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["touch",{"_index":342,"title":{},"body":{"index.html":{}}}],["true",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":167,"title":{},"body":{"guards/AuthGuard.html":{}}}],["twitter",{"_index":348,"title":{},"body":{"index.html":{}}}],["type",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeormmodule",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":190,"title":{},"body":{"modules/AuthModule.html":{}}}],["typeormmodule.forroot",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["typescript",{"_index":304,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":149,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["undefined",{"_index":147,"title":{},"body":{"guards/AuthGuard.html":{}}}],["unit",{"_index":320,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["unlicensed",{"_index":363,"title":{},"body":{"properties.html":{}}}],["useclass",{"_index":193,"title":{},"body":{"modules/AuthModule.html":{}}}],["usefactory",{"_index":229,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["user.email",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.id",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{}}}],["user/entities/user.entity",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["user/user.module",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["usermodule",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["username",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{}}}],["users.service",{"_index":251,"title":{},"body":{"modules/UsersModule.html":{}}}],["userservice",{"_index":182,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["userservice.create",{"_index":259,"title":{},"body":{"injectables/UsersService.html":{}}}],["usersmodule",{"_index":247,"title":{"modules/UsersModule.html":{}},"body":{"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":197,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["valid",{"_index":240,"title":{},"body":{"classes/LoginDto.html":{}}}],["validator",{"_index":245,"title":{},"body":{"classes/LoginDto.html":{},"dependencies.html":{}}}],["value",{"_index":369,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":268,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":364,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":361,"title":{},"body":{"properties.html":{}}}],["void",{"_index":256,"title":{},"body":{"injectables/UsersService.html":{}}}],["watch",{"_index":315,"title":{},"body":{"index.html":{}}}],["website",{"_index":346,"title":{},"body":{"index.html":{}}}],["world",{"_index":78,"title":{},"body":{"injectables/AppService.html":{}}}],["you'd",{"_index":336,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\n\nimport { UserModule } from './user/user.module';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from './user/entities/user.entity';\nimport { AuthModule } from './auth/auth.module';\n\n@Module({\n  imports: [\n    TypeOrmModule.forRoot({\n      type: 'postgres',\n      host: 'localhost',\n      port: 5433,\n      username: 'myuser',\n      password: 'mypassword',\n      database: 'my_database',\n      entities: [User],\n      synchronize: false,\n      autoLoadEntities: true,\n      logging: true,\n    }),\n    UserModule,\n    AuthModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                signIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(signInDto: LoginDto, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@HttpCode(HttpStatus.OK)@Post('login')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signInDto\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  HttpCode,\n  HttpStatus,\n  Post,\n  Res,\n} from '@nestjs/common';\nimport { Response } from 'express';\nimport { AuthService } from './auth.service';\nimport { Public } from './public_strategy';\nimport { LoginDto } from './dto/login.dto';\n\n@Controller('auth')\nexport class AuthController {\n  constructor(private authService: AuthService) {}\n\n  @Public()\n  @HttpCode(HttpStatus.OK)\n  @Post('login')\n  async signIn(\n    @Body() signInDto: LoginDto,\n    @Res({ passthrough: true }) response: Response,\n  ) {\n    const token = await this.authService.signIn(\n      signInDto.email,\n      signInDto.password,\n    );\n    console.log(token);\n\n    response.cookie('token', token, {\n      httpOnly: true,\n      secure: false,\n      maxAge: 1000 * 60 * 15,\n      sameSite: 'none',\n    });\n\n    return {\n      success: true,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                extractTokenFromHeader\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.guard.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.guard.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        extractTokenFromHeader\n                        \n                    \n                \n            \n            \n                \n                        \n                    extractTokenFromHeader(request: Request)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.guard.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  HttpException,\n  HttpStatus,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { JwtService } from '@nestjs/jwt';\nimport { IS_PUBLIC_KEY } from './public_strategy';\nimport { jwtConstants } from './constants';\nimport { Request } from 'express';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private jwtService: JwtService,\n    private reflector: Reflector,\n  ) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const isPublic = this.reflector.getAllAndOverride(IS_PUBLIC_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n    if (isPublic) {\n      return true;\n    }\n\n    const request = context.switchToHttp().getRequest();\n    if (!request.user) {\n      throw new HttpException('Unauthorized', HttpStatus.UNAUTHORIZED);\n    }\n    const token = this.extractTokenFromHeader(request);\n    if (!token) {\n      throw new UnauthorizedException();\n    }\n    try {\n      const payload = await this.jwtService.verifyAsync(token, {\n        secret: jwtConstants.secret,\n      });\n      request['user'] = payload;\n    } catch {\n      throw new UnauthorizedException();\n    }\n    return true;\n  }\n\n  private extractTokenFromHeader(request: Request): string | undefined {\n    const [type, token] = request.headers.authorization?.split(' ') ?? [];\n    return type === 'Bearer' ? token : undefined;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService\n\nAuthService\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { JwtModule } from '@nestjs/jwt';\nimport { jwtConstants } from './constants';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from 'src/user/entities/user.entity';\nimport { UserService } from 'src/user/user.service';\nimport { UserModule } from 'src/user/user.module';\n\n@Module({\n  imports: [\n    UserModule,\n    JwtModule.register({\n      global: true,\n      secret: jwtConstants.secret,\n      signOptions: { expiresIn: '1d' },\n    }),\n    TypeOrmModule.forFeature([User]),\n  ],\n  controllers: [AuthController],\n  providers: [\n    // {\n    //   // provide: APP_GUARD,\n    //   useClass: AuthGuard,\n    // },\n    AuthService,\n    UserService,\n  ],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                signIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UsersService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(payload: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(username: string, pass: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pass\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { UsersService } from 'src/users/users.service';\nimport { CreateUserDto } from 'src/users/dto/createUser.dto';\n\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private userService: UsersService,\n    private jwtService: JwtService,\n  ) {}\n\n  async signIn(username: string, pass: string): Promise {\n    const user = await this.userService.findOneByEmail(username);\n\n    console.log(user, pass);\n    if(user?.password !== pass) {\n      throw new UnauthorizedException();\n    }\n\n    const payload = { sub: user.id, email: user.email };\n    const token = await this.jwtService.signAsync(payload);\n\n    return token;\n  }\n\n  async register(payload: CreateUserDto) {\n    const user = await this.userService.createUser(payload);\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/createUser.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/createUser.dto.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateUserDto {\n  // TODO\n  email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/database.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module, Global } from '@nestjs/common';\nimport { Kysely, PostgresDialect } from 'kysely';\nimport { Pool } from 'pg';\n\nconst DATABASE_PROVIDERS = [\n  {\n    provide: 'DATABASE_CONNECTION',\n    useFactory: async () => {\n      const db = new Kysely({\n        dialect: new PostgresDialect({\n          pool: new Pool({\n            host: '127.0.0.1:5432',\n            database: 'hunters',\n            user: 'hunter',\n            password: 'super',\n          }),\n        }),\n      });\n      return db;\n    },\n  },\n];\n\n@Global()\n@Module({\n  providers: [...DATABASE_PROVIDERS],\n  exports: [...DATABASE_PROVIDERS],\n})\nexport class DatabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEmail(undefined, {message: 'Please provide valid Email.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/login.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/login.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty } from 'class-validator';\n\nexport class LoginDto {\n  @IsNotEmpty()\n  @IsEmail(null, { message: 'Please provide valid Email.' })\n  email: string;\n\n  @IsNotEmpty()\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService\n\nUsersService\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\n\n@Module({\n  controllers: [],\n  providers: [UsersService],\n})\nexport class UsersModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(user: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateUserDto } from './dto/createUser.dto';\n\n@Injectable()\nexport class UsersService {\n  create(user: CreateUserDto) {\n    // TODO Create user\n    console.log('TODO UserService.create', user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/constants.ts\n            \n            variable\n            jwtConstants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/public_strategy.ts\n            \n            variable\n            IS_PUBLIC_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/public_strategy.ts\n            \n            variable\n            Public\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/database.module.ts\n            \n            variable\n            DATABASE_PROVIDERS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/dto/createUser.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            class-validator : ^0.14.1\n        \n            kysely : ^0.27.3\n        \n            pg : ^8.11.5\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nExample :$ npm installRunning the app\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nUsersService\n\nUsersService\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DATABASE_PROVIDERS   (src/.../database.module.ts)\n                        \n                        \n                            IS_PUBLIC_KEY   (src/.../public_strategy.ts)\n                        \n                        \n                            jwtConstants   (src/.../constants.ts)\n                        \n                        \n                            Public   (src/.../public_strategy.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/database/database.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DATABASE_PROVIDERS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    provide: 'DATABASE_CONNECTION',\n    useFactory: async () => {\n      const db = new Kysely({\n        dialect: new PostgresDialect({\n          pool: new Pool({\n            host: '127.0.0.1:5432',\n            database: 'hunters',\n            user: 'hunter',\n            password: 'super',\n          }),\n        }),\n      });\n      return db;\n    },\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/auth/public_strategy.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublic'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_KEY, true)\n                    \n                \n\n\n        \n    \n\n    src/auth/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwtConstants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  secret: 'JWTSecret#@!',\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
